#!/bin/bash

# usage error message
usage=$(
cat <<EOF
$0 [OPTION]
-n VALUE	set the name of the docker container (defaults to 'single_cell')
-e VALUE	set the environment (defaults to 'development'. Running in 'production' will cause container to spawn headlessly)
-d VALUE	set the project directory to mount inside Docker container (defaults to current working directory: `pwd`)
-m VALUE	set the MONGO_LOCALHOST variable, only used in development (defaults to 'mongodb')
-r VALUE	set the maximum allowable RAM to be allocated to portal (defaults to 12GB)
-s VALUE	set the SECRET_KEY_BASE variable, used for secure cookies (auto-generates by default)
-k VALUE	set the SERVICE_ACCOUNT_KEY variable, necessary for making authenticated API calls to FireCloud & GCP (no default)
-p VALUE	set the PROD_DATABASE_PASSWORD variable, used in production only (no default value)
-h VALUE	set the PROD_HOSTNAME variable (used for callbacks, defaults to 'portals.broadinstitute.org')
-u VALUE	set the SENDGRID_USERNAME variable (used for emails)
-P VALUE	set the SENDGRID_PASSWORD variable (used for emails)
-o VALUE	set the OAUTH_CLIENT_ID variable (for Google OAuth2)
-S VALUE	set the OAUTH_CLIENT_SECRET variable (for Google OAuth2)
-H COMMAND	print this text
EOF
)

# defaults, note there is no default for PROD_DB_PASSWORD, SENDGRID_USERNAME or SENDGRID_PASSWORD
CONTAINER_NAME="single_cell"
PROJECT_DIR=`pwd`
PASSENGER_APP_ENV="development"
MONGO_LOCALHOST="mongodb"
PROD_HOSTNAME="portals.broadinstitute.org"
SECRET_KEY_BASE=`openssl rand -hex 64`
MAX_RAM=12GB

while getopts "n:e:d:m:r:s:k:p:h:u:P:H:o:S:" OPTION; do
case $OPTION in
	n)
		CONTAINER_NAME="$OPTARG"
		;;
	e)
		PASSENGER_APP_ENV="$OPTARG"
		;;
	d)
		PROJECT_DIR="$OPTARG"
		;;
	m)
  	MONGO_LOCALHOST="$OPTARG"
  	;;
	r)
		MAX_RAM="$OPTARG"
		;;
	s)
		SECRET_KEY_BASE="$OPTARG"
		;;
	k)
		SERVICE_ACCOUNT_KEY="$OPTARG"
		;;
	p)
		PROD_DATABASE_PASSWORD="$OPTARG"
		;;
	h)
		PROD_HOSTNAME="$OPTARG"
		;;
	u)
		SENDGRID_USERNAME="$OPTARG"
		;;
	P)
		SENDGRID_PASSWORD="$OPTARG"
		;;
	o)
		OAUTH_CLIENT_ID="$OPTARG"
		;;
	S)
		OAUTH_CLIENT_SECRET="$OPTARG"
		;;
	H)
		echo "$usage"
		exit 0
		;;
	*)
    echo "unrecognized option"
    echo "$usage"
    ;;
	esac
done

if [[ $PASSENGER_APP_ENV = "production" ]]
then
	# generate random secret key for secure cookies
	docker run -d --name $CONTAINER_NAME -p 80:80 -p 443:443 --link mongodb:mongodb -h $PROD_HOSTNAME -v $PROJECT_DIR:/home/app/webapp:rw -v $PROJECT_DIR/data:/home/app/webapp/data:rw -m $MAX_RAM -e PASSENGER_APP_ENV=$PASSENGER_APP_ENV -e MONGO_LOCALHOST=$MONGO_LOCALHOST -e PROD_DATABASE_PASSWORD=$PROD_DATABASE_PASSWORD -e SERVICE_ACCOUNT_KEY=$SERVICE_ACCOUNT_KEY -e SECRET_KEY_BASE=$SECRET_KEY_BASE -e PROD_HOSTNAME=$PROD_HOSTNAME -e SENDGRID_USERNAME=$SENDGRID_USERNAME -e SENDGRID_PASSWORD=$SENDGRID_PASSWORD -e OAUTH_CLIENT_ID=$OAUTH_CLIENT_ID -e OAUTH_CLIENT_SECRET=$OAUTH_CLIENT_SECRET single_cell_docker
elif [[ $PASSENGER_APP_ENV = "staging" ]]
then
	docker run -d --name $CONTAINER_NAME -p 80:80 -p 443:443 --link mongodb:mongodb -h $PROD_HOSTNAME -v $PROJECT_DIR:/home/app/webapp:rw -v $PROJECT_DIR/data:/home/app/webapp/data:rw -v $PROJECT_DIR/single-cell-staging.broadinstitute.org.crt:/etc/pki/tls/certs/localhost.crt -v $PROJECT_DIR/single-cell-staging.broadinstitute.org.key:/etc/pki/tls/private/localhost.key -m $MAX_RAM -e PASSENGER_APP_ENV=$PASSENGER_APP_ENV -e MONGO_LOCALHOST=$MONGO_LOCALHOST -e PROD_DATABASE_PASSWORD=$PROD_DATABASE_PASSWORD -e SERVICE_ACCOUNT_KEY=$SERVICE_ACCOUNT_KEY -e SECRET_KEY_BASE=$SECRET_KEY_BASE -e PROD_HOSTNAME=$PROD_HOSTNAME -e SENDGRID_USERNAME=$SENDGRID_USERNAME -e SENDGRID_PASSWORD=$SENDGRID_PASSWORD -e OAUTH_CLIENT_ID=$OAUTH_CLIENT_ID -e OAUTH_CLIENT_SECRET=$OAUTH_CLIENT_SECRET single_cell_docker
else
	docker run --rm -it --name $CONTAINER_NAME -p 80:80 -p 443:443 -p 587:587 --link mongodb:mongodb -h localhost -v $PROJECT_DIR:/home/app/webapp:rw -e PASSENGER_APP_ENV=$PASSENGER_APP_ENV -e MONGO_LOCALHOST=$MONGO_LOCALHOST -e SERVICE_ACCOUNT_KEY=$SERVICE_ACCOUNT_KEY -e SENDGRID_USERNAME=$SENDGRID_USERNAME -e SENDGRID_PASSWORD=$SENDGRID_PASSWORD -e SECRET_KEY_BASE=$SECRET_KEY_BASE -e OAUTH_CLIENT_ID=$OAUTH_CLIENT_ID -e OAUTH_CLIENT_SECRET=$OAUTH_CLIENT_SECRET single_cell_docker
fi