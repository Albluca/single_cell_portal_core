<div class="row">
	<div class="col-md-10">
		<h1>Gene Expression for <em><%= @genes.map {|g| link_to g.gene, "http://www.ncbi.nlm.nih.gov/gene/?term=#{g.gene}[sym]", 'data-toggle' => 'tooltip', title: "Search Entrez for '#{g.gene}'", 'data-placement' => 'right'}.join(', ').html_safe %></em> <%= params[:cluster] ? "across cluster: #{params[:cluster]}" : 'for all major cell types' %></h1>
	</div>
	<div class="col-md-2">
		<h1><%= link_to "<span class='fa fa-chevron-left'></span> Back to study".html_safe, view_study_path(params[:study_name]), class: 'btn btn-lg btn-warning pull-right' %></h1>
	</div>
</div>
<div class="panel panel-default">
	<div class="panel-heading">
		<div class="panel-title">
			<h4><%= link_to "Expression Heatmap <span class='fa fa-chevron-down'></span>".html_safe, '#heatmap-controls', 'data-toggle' => 'collapse'  %></h4>
		</div>
	</div>
	<div id="heatmap-controls" class="panel-collapse collapse in">
		<div class="panel-body">
			<%= render partial: 'gene_search_form' %>
			<%= render partial: 'colorscale_picker' %>
			<%= render partial: 'expression_heatmap_nav' %>
			<%= render partial: 'gene_nav' %>
			<div id="heatmap-plot"></div>
		</div>
	</div>
</div>

<%= javascript_tag do %>

	// load expression plot data
	var genes = {
		x: <%= raw @values[:x] %>,
		y: <%= raw @values[:y] %>,
		z: <%= raw @values[:z] %>,
		text: <%= raw @values[:text] %>,
		colorscale: "<%= @values[:colorscale] %>",
		type: 'heatmap',
		showscale: true,
		hoverinfo: 'text',
		colorbar: {
			title: 'log(TPM) Expression Values',
			titleside: 'right',
			titlefont: plotlyLabelFont
		}
	};

	var expressionData = [genes];

	var posTally = -0.5;

	var expressionLayout = {
		hovermode: 'closest',
		xaxis: {
			ticks: '',
			tickmode: 'array',
			tickvals: [],
			title: 'Cells [Cluster]',
			titlefont: plotlyTitleFont
		},
		yaxis: {
			fixedrange: true,
			ticks: ''
		},
		font: plotlyLabelFont,
		shapes: [
			// build cluster shapes to group results
			// use posTally to keep reference
			<% @clusters.each_with_index do |cluster, index| %>
				{
					type: 'rect',
					xref: 'x',
					yref: 'paper',
					x0: posTally,
					y0: 0.95,
					x1: (posTally += <%= cluster.single_cells.size %>),
					y1: 1,
					line: {
						width: 0
					},
					fillcolor: plotlyDefaultColors[<%= index %>]
				},
			<% end %>
		]
	};

	Plotly.newPlot('heatmap-plot', expressionData, expressionLayout);

	// listener to redraw expression scatter with new color profile
	$("#colorscale").change(function() {

		var theme = $(this).val();
		genes.colorscale = theme;
		console.log("setting colorscale to " + theme);
		expressionData = [genes];

		Plotly.newPlot('heatmap-plot', expressionData, expressionLayout);
	});

	// re-render expression plots on window resize to use available area
	$( window ).on('resizeEnd', function() {
		var posTally = 0;
		var expressionLayout = {
			hovermode: 'closest',
			xaxis: {
				ticks: '',
				tickmode: 'array',
				tickvals: [],
				title: 'Cells [Cluster]',
				titlefont: plotlyTitleFont
			},
			yaxis: {
				fixedrange: true,
				ticks: ''
			},
			font: plotlyLabelFont,
			shapes: [
				// build cluster shapes to group results
				// use posTally to keep reference
				<% @clusters.each_with_index do |cluster, index| %>
					{
						type: 'rect',
						xref: 'x',
						yref: 'paper',
						x0: posTally,
						y0: 0.95,
						x1: (posTally += <%= cluster.single_cells.size %>),
						y1: 1,
						line: {
							width: 0
						},
						fillcolor: plotlyDefaultColors[<%= index %>]
					},
				<% end %>
			]
		};

		Plotly.newPlot('heatmap-plot', expressionData, expressionLayout);
	});

<% end %>