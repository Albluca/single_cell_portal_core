<div class="row">
	<div class="col-md-12">
		<h1 class="study-lead">Gene<%= action_name =~ /set/ ? ' Set' : nil %> Expression for <%= render partial: 'gene_name_list' %><%= render partial: 'missing_genes' %></h1>
		<% if action_name =~ /set/ %>
			<h3 class="help-block lead">Expression values are shown as the <strong><%= params[:consensus].nil? ? 'mean' : params[:consensus] %></strong> of expression values across all genes for each cell.</h3>
		<% end %>
	</div>
</div>
<div class="row">
	<div class="col-md-3" id="search-target">
		<%= render partial: 'search_options' %>
	</div>
	<div class="col-md-9" id="render-target">
		<%= render partial: 'view_options' %>
		<div id="expression-plots">
      <%= render partial: @top_plot_partial %>
    </div>
	</div>
</div>
<script type="text/javascript">

    var baseCamera = {
        "up":{"x":0,"y":0,"z":1},
        "center":{"x":0,"y":0,"z":0},
        "eye":{"x":1.25,"y":1.25,"z":1.25}
    };

    function renderGeneExpressionPlots() {

        // monitor rendering for tests, must store in parent div to persist past render (entire plotly area is replaced on render)
        $('#expression-plots').data('box-rendered', false);
        $('#expression-plots').data('scatter-rendered', false);
        $('#expression-plots').data('reference-rendered', false);

        <% if !params[:gene].nil? %>
          var url = '<%= render_gene_expression_plots_path(study_name: params[:study_name], gene: params[:gene]) %>';
        <% elsif !params[:gene_set].nil? %>
          var url = '<%= render_gene_set_expression_plots_path(study_name: params[:study_name], gene_set: params[:gene_set]) %>';
        <% else %>
          var url = '<%= render_gene_set_expression_plots_path(study_name: params[:study_name], search: {genes: @gene_list}) %>';
        <% end %>
        var target1 = document.getElementById('box-plot');
        var target2 = document.getElementById('scatter-plot');
        var target3 = document.getElementById('reference-plot');

        // no need to store spinners in data attribute as entire plot div will be re-rendered
        new Spinner(opts).spin(target1);
        new Spinner(opts).spin(target2);
        new Spinner(opts).spin(target3);

        var cluster = $('#cluster').val();
        var annotation = $('#annotation').val();
        var consensus = $('#search_consensus').val();
        var subsample = $('#subsample').val();
        var boxpoints = $('#boxpoints_select').val() == undefined ? 'all' : $('#boxpoints_select').val();
        $("#search_cluster").val(cluster);
        $("#search_annotation").val(''); // clear value first
        $("#search_annotation").val(annotation);
        var delimeter = "<%= params[:gene] ? "?".html_safe : "&".html_safe %>";
        $.get(url + delimeter + 'cluster=' + cluster + '&annotation=' + annotation + '&boxpoints=' + boxpoints + '&consensus=' + consensus + '&subsample=' + subsample);
    }

    $(document).ready(function() {
        // store camera data in outer plot so it will persist past render
        $('#expression-plots').data('scatter-camera', baseCamera);
        renderGeneExpressionPlots();
    });
    // listener for annotation nav, specific to expression pages
    $("#annotation").change(function() {
        // keep track for search purposes
        var val = $(this).val();
        $('#search_annotation').val(val);
        $('#gene_set_annotation').val(val);

        renderGeneExpressionPlots();
    });

    $('#subsample').change(function() {
        var sample = $(this).val();
        $('#search_subsample').val(sample);
        renderGeneExpressionPlots();
    });

    // when changing cluster, re-render annotation options and call render function
    $("#cluster").change(function() {
        var newCluster = $(this).val();
        // keep track for search purposes
        $('#search_cluster').val(newCluster);
        $('#gene_set_cluster').val(newCluster);
        // grab currently selected annotation
        var currAnnot = $('#annotation').val();
        // get new annotation options and re-render
        $.get("<%= get_new_annotations_path(study: params[:study])%>?cluster=" + newCluster, function (data) {
            // parse response as a string and see if currently selected annotation exists in new annotations
            if (data.indexOf(currAnnot) >= 0) {
                $('#annotation').val(currAnnot);
            }
            $(document).ready(function () {
                // since we now have new annotations, we need to set them in the search form for persistence
                var an = $('#annotation').val();
                $('#search_annotation').val(an);
                $('#gene_set_annotation').val(an);
                renderGeneExpressionPlots();
            })
        });
    });

</script>