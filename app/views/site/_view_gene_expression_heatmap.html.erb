<div class="row">
  <div class="col-md-3" id="search-target">
    <%= render partial: 'search_options' %>
  </div>
  <div class="col-md-9" id="render-target">
    <%= render partial: 'view_options' %>
    <div class="panel panel-default">
      <div class="panel-heading">
        <div class="panel-title">
          <h4><%= link_to "Expression Heatmap <span class='fa fa-chevron-down toggle-glyph'></span>".html_safe, '#plots', 'data-toggle' => 'collapse' %> <%= render partial: 'show_search_options_button' %></h4>
        </div>
      </div>
      <div id="plots" class="panel-collapse collapse in">
        <div class="panel-body">
          <div class="col-md-12">
            <%= render partial: 'morpheus_help' %>
            <div id="heatmap-plot"></div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<script type="text/javascript">

    // monitor status of rendering plots for tests
    $('#heatmap-plot').data('rendered', false);
    $(window).off('resizeEnd');

    function drawHeatmap(height) {
        // clear out previous stored heatmap object
        $('#heatmap-plot').data('heatmap', null);
        // if height isn't specified, pull from stored value, defaults to 500
        if (height === undefined) {
            height = $('#heatmap-plot').data('height');
        }
        // pull fit type as well, defaults to ''
        var fit = $('#heatmap-plot').data('fit');

        var dataPath = '<%= javascript_safe_url(expression_query_path(study_name: params[:study_name], search: {genes: @gene_list })) %>';
        var row_centered = $('#row_centered').prop('checked') ? 1 : 0;
        var selectedAnnot = $('#annotation').val();
        var annotName = selectedAnnot.split('--')[0];
        var annotType = selectedAnnot.split('--')[1];
        dataPath += '&row_centered=' + row_centered;
        var cluster = $('#cluster').val();
        $("#search_cluster").val(cluster);
        $('#search_annotation').val(''); // clear value first
        $("#search_annotation").val(selectedAnnot);
        var requestToken = '<%= user_signed_in? ? current_user.id.to_s + ':' + current_user.authentication_token : nil %>';
        dataPath += '&cluster=' + cluster + '&request_user_token=' + requestToken;
        var newAnnotPath = '<%= annotation_query_path(study_name: params[:study_name]) %>?cluster=' + cluster + '&annotation=' + selectedAnnot;

        renderMorpheus(dataPath, newAnnotPath, annotName, annotType, '#heatmap-plot', fit, height);
    }


    $(document).ready(function() {
        $('#heatmap-plot').data('fit', '');
        $('#heatmap-plot').data('height', 500);
        drawHeatmap();
    });

    $("#row_centered, #annotation").change(function() {
        $('#heatmap-plot').data('rendered', false);
        if ($(this).attr('id') == 'annotation') {
            var an = $(this).val();
            // keep track for search purposes
            $('#search_annotation').val(an);
            $('#gene_set_annotation').val(an);
        }
        drawHeatmap();
    });
    // when changing cluster, re-render annotation options and call render function
    $("#cluster").change(function(){
        $('#heatmap-plot').data('rendered', false);
        var newCluster = $(this).val();
        // keep track for search purposes
        $('#search_cluster').val(newCluster);
        $('#gene_set_cluster').val(newCluster);
        var currAnnot = $('#annotation').val();
        // get new annotation options and re-render
        $.ajax({
            url: "<%= get_new_annotations_path(study: params[:study])%>?cluster=" + newCluster,
            method: 'GET',
            dataType: 'script',
            success: function (data) {
                // parse response as a string and see if currently selected annotation exists in new annotations
                if (data.indexOf(currAnnot) >= 0) {
                    $('#annotation').val(currAnnot);
                }
                $(document).ready(function () {
                    // since we now have new annotations, we need to set them in the search form for persistence
                    var an = $('#annotation').val();
                    $('#search_annotation').val(an);
                    $('#gene_set_annotation').val(an);
                    drawHeatmap();
                });
            }
        });
    });

    $('#resize-heatmap').click(function() {
        $('#heatmap-plot').data('rendered', false);
        var newHeight = parseInt($('#heatmap_size').val());
        $("#heatmap-plot").data('height', newHeight);
        console.log('resizing heatmap to ' + newHeight);
        drawHeatmap(newHeight);
    });

    $('#view-fullscreen').click(function() {
        $('#heatmap-plot').data('rendered', false);
        var btn = $(this);
        var btnState = btn.data('active');
        var newState = btnState === 'on' ? 'off' : 'on';
        btn.data('active', newState);
        btn.toggleClass('active');
        toggleSearch();
        var searchDisplay = $('#search-options-panel').css('display');
        var currHeight = $('#heatmap_size').val();
        var redraw = searchDisplay === 'none' || currHeight !== '';
        // toggle view options if search options has been hidden
        if (searchDisplay === 'none') {
            $('#view-options').collapse('hide');
        }
        if (redraw) {
            // if currHeight is blank, calling drawHeatmap with NaN for height will render all rows visible
            drawHeatmap(parseInt(currHeight));
        } else {
            drawHeatmap();
        }
    });

    $('.fit-btn').click(function() {
        $('#heatmap-plot').data('rendered', false);
        var btn = $(this);
        var btnState = btn.data('active');
        var newState = btnState === 'on' ? 'off' : 'on';
        btn.data('active', newState);
        var fitType = btn.data('fit');
        console.log('setting fit type: ' + fitType + 'to ' + newState);
        var plot = $('#heatmap-plot');
        btn.toggleClass('active');
        currFit = plot.data('fit');
        // determine state and set appropriately
        if (newState == 'on') {
            if (currFit !== '' && fitType !== currFit) {
                fitType = 'both'
            }
        } else {
            if (currFit === 'both') {
                fitType = fitType === 'rows' ? 'cols' : 'rows';
            } else {
                fitType = '';
            }
        }

        plot.data('fit', fitType);
        drawHeatmap();
    });

    // reattach tooltips & popovers on render
    $('[data-toggle="tooltip"]').tooltip({container: 'body'});
    $('[data-toggle="popover"]').popover();

</script>